1719582952
waR3U4bTeM%3Ac8c705ef793e3708cb3daf6745b4369a-7efdea5b9d4bc07a3f10c1bc2c3868aa
s:7044:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdlZmRlYTViOWQ0YmMwN2EzZjEwYzFiYzJjMzg2OGFhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTE6InByb2ZpbGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTg6IndlYmRpci9wcm9maWxlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDM4NToiPD9waHAKLy8gcmVxdWlyZSB0aGUgY29tbW9uLnBocCBzdHVmZgpyZXF1aXJlX29uY2UgJ2NvbW1vbi5waHAnOwppZiAoIWlzc2V0KCRfR0VUWyd1c2VyJ10pKSB7CiAgICBleGl0X3dpdGhfYmFkX3JlcXVlc3QoKTsKfQo/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZGUiPgo8aGVhZD4KPD9waHAgcmVxdWlyZSAndGVtcGxhdGVzL2hlYWQucGhwJyA/Pgo8L2hlYWQ+Cjxib2R5PgogICAgPD9waHAgcmVxdWlyZSAndGVtcGxhdGVzL2hlYWRlci5waHAnID8+CiAgICA8bWFpbj4KICAgICAgICA8P3BocCByZXF1aXJlICd0ZW1wbGF0ZXMvaGVyby5waHAnIC8vIGxvYWQgdGhlIHNlYXJjaCBiYXIgYW5kIHNvIG9uID8+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgICAgICAgICAgPD9waHAKICAgICAgICAgICAgICAgICAgICAgICAgJGNvbm4gPSBuZXcgRGF0YWJhc2VDb25uZWN0aW9uKCRpbmlfYXJyYXkpOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgJHVzZXIgPSAkY29ubi0+cXVlcnlfYWxsX3VzZXJfZGF0YSgkX0dFVFsndXNlciddKS0+Z2V0X3Jlc3VsdCgpLT5mZXRjaF9hc3NvYygpOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzc2V0KCR1c2VyKSB8fCAkdXNlciA9PT0gTlVMTCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhpdF93aXRoX25vdF9mb3VuZCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICc8aDQgY2xhc3M9ImRpc3BsYXktNCBtdC01IG14LTUiPlJlemVwdGUgdm9uICcgLiAkdXNlclsndXNlcm5hbWUnXSAuICc8L2g0Pjxicj4nOwoKICAgICAgICAgICAgICAgICAgICAgICAgJHJvd3MgPSAkY29ubi0+cXVlcnlfcmVjaXBpZXNfdXNlcigkX0dFVFsndXNlciddKS0+Z2V0X3Jlc3VsdCgpLT5mZXRjaF9hbGwoTVlTUUxJX0FTU09DKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc3NldCgkcm93cykgfHwgJHJvd3MgPT09IE5VTEwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXRfd2l0aF9ub3RfZm91bmQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY291bnQoJHJvd3MpIDwgMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAnPHAgY2xhc3M9ImZzLTMgbXgtNSI+RGllc2VyIE51dHplciBoYXQga2VpbmUgUmV6ZXB0ZSBlcnN0ZWxsdC48L3A+JzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJzxkaXYgY2xhc3M9InJlY2lwZS1ncmlkIGNvbnRhaW5lci1mbHVpZCBweC01IG10LTUiIGlkPSJmZWF0dXJlZC1yZWNpcGllcy1ncmlkIj4nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJvd3MgYXMgJHJvdykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkcm93WydpbWFnZV9wYXRoJ10gPT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9L2RldGFpbC5waHA/cmVjaXBpZT0nIC4gJHJvd1snc2x1ZyddIC4gJz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCIgc3R5bGU9Im1heC13aWR0aDogMThyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaW1nL2ljb25zL2VtcHR5X3BsYXRlLmpwZyIgY2xhc3M9ImNhcmQtaW1nLXRvcCBjYXJkLWltZyIgYWx0PSJ0aHVtYm5haWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtdGl0bGUiPicgLiBodG1sc3BlY2lhbGNoYXJzKCRyb3dbJ3RpdGxlJ10sIEVOVF9RVU9URVMsICdVVEYtOCcpIC4gJzwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4nIC4gaHRtbHNwZWNpYWxjaGFycyhlc2NhcGVfbmV3bGluZXMoc3Vic3RyKCRyb3dbJ2Rlc2NyaXB0aW9uJ10sIDAsIDEwMCksIEVOVF9RVU9URVMsICdVVEYtOCcpKSAuICc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LWdyb3VwIGxpc3QtZ3JvdXAtZmx1c2giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+JyAuICRjb25uLT5nZXRfY291bnRyeV9ieV9pZCgkcm93Wydjb3VudHJ5J10pWyduYW1lJ10gLiAnPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPic7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlY2hvICcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0vZGV0YWlsLnBocD9yZWNpcGllPScgLiAkcm93WydzbHVnJ10gLiAnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIiBzdHlsZT0ibWF4LXdpZHRoOiAxOHJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJpbWcvdXNlcnVwbG9hZHMvJyAuICRyb3dbJ2ltYWdlX3BhdGgnXSAuICciIGNsYXNzPSJjYXJkLWltZy10b3AgY2FyZC1pbWciIGFsdD0idGh1bWJuYWlsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj4nIC4gaHRtbHNwZWNpYWxjaGFycygkcm93Wyd0aXRsZSddLCBFTlRfUVVPVEVTLCAnVVRGLTgnKSAuICc8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+JyAuIGh0bWxzcGVjaWFsY2hhcnMoZXNjYXBlX25ld2xpbmVzKHN1YnN0cigkcm93WydkZXNjcmlwdGlvbiddLCAwLCAxMDApLCBFTlRfUVVPVEVTLCAnVVRGLTgnKSkgLiAnPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC1ncm91cCBsaXN0LWdyb3VwLWZsdXNoIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0iPicgLiAkY29ubi0+Z2V0X2NvdW50cnlfYnlfaWQoJHJvd1snY291bnRyeSddKVsnbmFtZSddIC4gJzwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICA/PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgIDw/cGhwIHJlcXVpcmUgJ3RlbXBsYXRlcy9mZWF0dXJlZC1yZWNpcGllcy5waHAnIC8vIHNob3cgcG9wdWxhciA/PgogICAgICAgIDwvZGl2PgogICAgPC9tYWluPgogICAgPGZvb3Rlcj4KICAgIDw/cGhwIHJlcXVpcmUgJ3RlbXBsYXRlcy9mb290ZXIucGhwJyA/PgogICAgPC9mb290ZXI+CjwvYm9keT4KPC9odG1sPgoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";